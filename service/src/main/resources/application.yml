server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api
  error:
    include-stacktrace: never

spring:
  config:
    import:
      - classpath:/cloudamqp.yml
      - classpath:/security.yml
      - classpath:/keycloak.yml
      - classpath:/config.yml
      - classpath:/springdoc.yml
      - classpath:/logging.yml
      - classpath:/eureka.yml
      - classpath:/management.yml
  application:
    name: service.users
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${keycloak.issuer-uri}
          jwk-set-uri: ${keycloak.jwk-set-uri}
        opaquetoken:
          introspection-uri: ${keycloak.introspection-uri}
          client-id: ${keycloak.client-id}
          client-secret: ${keycloak.client-secret}
  devtools:
    restart:
      enabled: false
  jackson:
    mapper:
      accept-case-insensitive-enums: true
  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      org:
        hibernate:
          envers:
            audit_strategy: org.hibernate.envers.strategy.ValidityAuditStrategy
            default_schema: history
            audit_table_suffix: _history
            revision_field_name: rev_id
            revision_type_field_name: rev_type
            store_data_at_delete: true
      #            audit_table_prefix:
      hibernate:
        enable_lazy_load_no_trans: true
        default_schema: users
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    show-sql: false
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
  rabbitmq:
    host: ${cloudamqp.host}
    port: ${cloudamqp.port}
    password: ${cloudamqp.password}
    username: ${cloudamqp.username}
    virtual-host: ${cloudamqp.virtual-host}
